Generics:
    1. Generic Class
        declaring a generic class: class class-name<type-param-list>{//..
        reference to a generic class and creating a generic instance
            class-name<type-param-list> = new class-name<>(cons-arg-list) with jdk7

         Bounded Types
            - upper bound that declares the superclass from which all types arguments must be derived
            <T extends superclass> - means T can be replaced only by superclass

        WildCard arguments
            -methodname(class<?> Obj)

            -bounded wildcards
                static void test(Gen<? extends class> o){

                }
                to establish an upper bound for a wildcard <? extends superclass>

                specify a lower bound for a wildcard by adding a super clause to a wildcard
                declaration. <? super subclass> - only classes that are superclasses of subclass are acceptable arguments

    2. Generic Methods
        <type-param-list> ret-type meth-name(param-list){
        
        }
        exp: static <T extends Comparable<T>, V extends T> boolean arrayEqual(T[] x, V[] y){

        }

        type paramters are declared before return type
        generic method can be static or non static

    3. Generic constructors
            - constructors can be generic, even if it's class is not
            interface interface-name<type-param - list>
            class class-name<type-param-list> implements interface-name<type-param-list>

    4. Generic Restrictions
        -type parameters can't be instantiated
        -no static members can use a type parameter declared by the enclosing class
        - you cannot instantiate an array whosse element type is a type parameter
        - you cannot create an array of type-specific generic references
        - a generic class cannot extend Throwable. This means that you cannot create generic exception classes


Lambda Expressions:

1. lambda expression - is an anonymous method. This method is not executed on its own. Instead, it is used to implement a method
    defined by a functional interface.

2. functional interface - is an interface that contains one and only one abstract method. functional interface
    typically represents a single action.

    functional interface defines the target type of a lambda expression
    a lambda expression can be used only in a context in which a target type is specified

